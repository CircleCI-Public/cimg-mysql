version: 2.1

orbs:
  cimg: circleci/cimg@0.3.3

workflows:
  main-wf:
    jobs:
    - cimg/build-and-deploy:
        name: "Staging"
        docker-namespace: ccitest
        docker-repository: mysql
        publish-branch: test
        filters:
          branches:
            ignore:
              - main
        post-steps:
          - run:
              name: Install Prerequisites
              command: |
                sudo apt-get update && \
                sudo apt-get install -y mysql-client
          - run:
              name: "Test Docker Images"
              shell: /bin/bash -o pipefail
              command: |
                ssh -f -N -L localhost:3306:localhost:3306 remote-docker
                IMAGES=$(docker images --format='{{.Repository}}:{{.Tag}}' | grep "cimg/mysql")
                for IMAGE in $IMAGES; do
                  printf "Booting $IMAGE...\n"
                  CONTAINER_ID=$(docker run --rm --env MYSQL_USER=user --env MYSQL_PASSWORD=passw0rd -p 3306:3306 -d $IMAGE)
                  for i in {1..20}; do
                    printf "[$i/20] Checking MySQL is up...\n"
                    mysqladmin ping -h 127.0.0.1 --silent
                    if [ $? -eq 0 ]; then
                      printf "Booted $IMAGE!\n"
                      break
                    elif [ $? -ne 0 ] && [ $i -eq 20 ]; then
                      printf "Failed to boot image\n"
                      exit 1
                    fi
                    printf "[$i/20] No response. Sleeping 10s...\n"
                    sleep 10s
                  done
                  printf "Running Version Check...\n"
                  VERSION=$(echo $IMAGE | cut -d ":" -f2 | cut -d "-" -f1)
                  if mysql -h 127.0.0.1 -u user -ppassw0rd --execute="SELECT VERSION();" | grep $VERSION ; then
                    printf "Version matches!\n"
                  else
                    printf "Version mismatch!\n"
                    exit 1
                  fi
                  printf "Stopping $IMAGE...\n"
                  docker stop $CONTAINER_ID >/dev/null 2>&1
                done
                printf "All images passed!\n"
        context: cimg-publishing
    - cimg/build-and-deploy:
        name: "Deploy"
        docker-repository: mysql
        filters:
          branches:
            only:
              - main
        context: cimg-publishing

